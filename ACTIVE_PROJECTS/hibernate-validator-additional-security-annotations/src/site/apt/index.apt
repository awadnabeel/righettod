           ------
           How to
           ------
                      
Project objective.

	This project have to objective to provide content checking constraints annotations set focused on security using the JSR303 RI Hibernate Validation.
	
	This JSR can be used to perform security check on input user data and then it's for this reason that i decided to use
	it as framework.
	
	This annotation do not check the min/max lenght of the value because existing annotation can be used for this type of check:
	
	* @Range(min=, max=)
	
	* @Length(min=, max=)
	
	{{{http://docs.jboss.org/hibernate/stable/validator/reference/en-US/html_single/#table-spec-constraints} Consult the list of existing annotations}}                   
                     
How to use annotation.

	The annotation is named "@CheckContent" and have the following specific attributes:
	
	* whitelistIdentifier.
	
	* continuousRepetitionLimitationMapJsonExpr.
	
	* whitelistLocale.
	
	[]
	
	Attributes can be used in any combination.
	
	"<<whitelistIdentifier>>" attribute is used to indicate the characters whitelist to use for check value content. If an 
	character from the value is not present into the whitelist then the value is considered as invalid. 
	
	This attribute contains an identifier to the whitelist definition that is stored into a property file located at root of the application classpath.
	
	The file must be named "whitelists.properties" or "whitelists_LOCALE.properties" if you want to create locale specific whitelist definition files.
	If the validator cannot find bundle associated to locale specified then it first revert to file "whitelists.properties" and if it cannot find
	this file then it finally revert to default bundle embedded into annotation jar file.  
	
	
	
	"<<continuousRepetitionLimitationMapJsonExpr>>" attribute is used to define a map representing collection of characters
	for which the continuous repetition is limited to specified count, all of this using JSON syntax.
	
	Key is the character and Value is the repetition limit count.
	
	Ex: \{"(":1,"-":1,".":3,"'":1\}
	
	
	
	"<<whitelistLocale>>" attribute is used to indicate the locale to used for load bundle (property file) containing the character whitelist (if no locale is specified then the validaor take the default runtime locale).
	
How to use validation. 
	
	To perform validation on an annoted bean instance, follow steps below:
	
	[[1]] Obtains an "javax.validation.Validator" instance using "javax.validation.Validation" factory: 
		
		Validator val = Validation.buildDefaultValidatorFactory().getValidator();
	
	[[2]] Apply validation on target bean using created validator in order to obtains a "java.util.Set" of "javax.validation.ConstraintViolation" instances:
	
		Set\<ConstraintViolation\<MyBeanClass\>\> constraintViolations = val.validate(bean);
		
	[[3]] Check if constraint violations exists using Set object obtained:
	
		constraintViolations.isEmpty(); 	 	 
		
		constraintViolations.iterator();

	[]
	
	See unit test for complete samples.
	
			